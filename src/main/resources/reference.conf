include "akka-exchange.conf"
akka {
  # Log the complete configuration at INFO level when the actor system is started.
  # This is useful when you are uncertain of what configuration is used.
  log-config-on-start = off
  log-dead-letters = off
  log-dead-letters-during-shutdown = off

  loggers = ["akka.event.slf4j.Slf4jLogger"]
  loglevel = "DEBUG"
  logging-filter = "akka.event.slf4j.Slf4jLoggingFilter"

  actor {
    provider = "akka.cluster.ClusterActorRefProvider"

    debug {
      # enable function of LoggingReceive, which is to log any received message at
      # DEBUG level
      receive = on
      # enable DEBUG logging of all AutoReceiveMessages (Kill, PoisonPill et.c.)
      autoreceive = on
      # enable DEBUG logging of actor lifecycle changes
      lifecycle = on
      # enable DEBUG logging of all LoggingFSMs for events, transitions and timers
      fsm = on
      # enable DEBUG logging of subscription changes on the eventStream
      event-stream = on
    }
  }
  remote {
    netty.tcp {
      hostname = ${akka-exchange.cluster.local.address}
      port = ${akka-exchange.cluster.local.port}
    }
    # If this is "on", Akka will log all outbound messages at DEBUG level,
    # if off then they are not logged
    log-sent-messages = on
    log-remote-lifecycle-events = on
    # Logging of message types with payload size in bytes larger than
    # this value. Maximum detected size per message type is logged once,
    # with an increase threshold of 10%.
    # By default this feature is turned off. Activate it by setting the property to
    # a value in bytes, such as 1000b. Note that for all messages larger than this
    # limit there will be extra performance and scalability cost.
    log-frame-size-exceeding = 1000b
  }
 
  cluster {
    seed-nodes = [
      "akka.tcp://"${akka-exchange.cluster.name}"@"${akka-exchange.cluster.seed01.address}":"${akka-exchange.cluster.seed01.port}
      #"akka.tcp://akka-exchange@seed:2551" # default
    ]
 
    auto-down-unreachable-after = 60s

    min-nr-of-members = 2

    akka.cluster.role {
      frontend.min-nr-of-members = 1
      # separate from seed in case seed node identity changes later
      seed.min-nr-of-members = 1
      shared-journal.min-nr-of-members = 1
      trader-db.min-nr-of-members = 1
      #securities-db.min-nr-of-members = 1
      #network-trade.min-nr-of-members = 1
      #ticker.min-nr-of-members = 1
      #trade-engine.min-nr-of-members = 1
    }
  }

  persistence {
    journal {
      plugin = "akka.persistence.journal.leveldb-shared"
    }
  }
}
 
# Disable legacy metrics in akka-cluster.
akka.cluster.metrics.enabled=off
 
# Enable metrics extension in akka-cluster-metrics.
akka.extensions=["akka.cluster.metrics.ClusterMetricsExtension"]
 
# Sigar native library extract location during tests.
# Note: use per-jvm-instance folder when running multiple jvm on one host. 
akka.cluster.metrics.native-library-extract-folder=${user.dir}/target/native
